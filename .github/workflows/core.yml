name: core

on:
  push:
    branches:
      - main
    paths:
      - core/**

jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install packages
        working-directory: core
        run: go mod download

      - name: Create cofig
        working-directory: core
        run: cp config.example.yml config.yml

      - name: Run test
        working-directory: core
        run: go test ./...

  build:
    needs:
      - test
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_PERSONAL_ACCESS_TOKEN }}

      - name: Create image tags
        id: tags
        run: |
          case ${{ github.ref }} in

            refs/heads/main)
              echo "TAGS=\
              ghcr.io/${{ github.repository }}-core:staging-latest, \
              ghcr.io/${{ github.repository }}-core:staging-${{ github.sha }}" >> $GITHUB_OUTPUT
              ;;

            refs/heads/production)
              echo "TAGS=\
              ghcr.io/${{ github.repository }}-core:staging-latest, \
              ghcr.io/${{ github.repository }}-core:staging-${{ github.sha }}" >> $GITHUB_OUTPUT
              ;;

            *)
              echo "This branch can't be built"
              ;;
          esac

      - name: Build and push
        if: steps.tags.outputs.TAGS != ''
        uses: docker/build-push-action@v4
        with:
          push: true
          context: ./core
          tags: ${{ steps.tags.outputs.TAGS }}
